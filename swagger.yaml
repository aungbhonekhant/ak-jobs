openapi: 3.0.0
info:
  title: Jobs API
  contact: {}
  version: '1.0'
servers:
- url: https://ak-jobs.herokuapp.com/api/v1
  variables: {}
- url: http://localhost:3000/api/v1/jobs
  variables: {}
paths:
  /auth/register:
    post:
      tags:
      - Auth
      summary: User Register
      operationId: UserRegister
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UserRegisterRequest'
              - example:
                  name: abk
                  email: ak@gmail.com
                  password: '123456'
            example:
              name: abk
              email: ak@gmail.com
              password: '123456'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
      - url: https://ak-jobs.herokuapp.com/api/v1
        variables: {}
  /auth/login:
    post:
      tags:
      - Auth
      summary: User Login
      operationId: UserLogin
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UserLoginRequest'
              - example:
                  email: ak@gmail.com
                  password: '123456'
            example:
              email: ak@gmail.com
              password: '123456'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
      - url: https://ak-jobs.herokuapp.com/api/v1
        variables: {}
  /jobs:
    post:
      tags:
      - Jobs
      summary: Create Job
      operationId: CreateJob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateJobRequest'
              - example:
                  company: Netflix
                  position: back-end developer
            example:
              company: Netflix
              position: back-end developer
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
      servers:
      - url: https://ak-jobs.herokuapp.com/api/v1
        variables: {}
    get:
      tags:
      - Jobs
      summary: Get All Jobs
      operationId: GetAllJobs
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
      servers:
      - url: https://ak-jobs.herokuapp.com/api/v1
        variables: {}
  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The job ID
    get:
      tags:
      - Jobs
      summary: Get Single Jobs
      operationId: GetSingleJobs
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
      servers:
      - url: https://ak-jobs.herokuapp.com/api/v1
        variables: {}
    delete:
      tags:
      - Jobs
      summary: Delete Job
      operationId: DeleteJob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
      servers:
      - url: https://ak-jobs.herokuapp.com/api/v1
        variables: {}
  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The job ID
    patch:
      tags:
      - Jobs
      summary: Update Job
      operationId: UpdateJob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateJobRequest'
              - example:
                  company: Random
                  position: full-stack developer
            example:
              company: Random
              position: full-stack developer
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
      servers:
      - url: http://localhost:3000/api/v1/jobs
        variables: {}
components:
  schemas:
    UserRegisterRequest:
      title: UserRegisterRequest
      required:
      - name
      - email
      - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: abk
        email: ak@gmail.com
        password: '123456'
    UserLoginRequest:
      title: UserLoginRequest
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: ak@gmail.com
        password: '123456'
    CreateJobRequest:
      title: CreateJobRequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: Netflix
        position: back-end developer
    UpdateJobRequest:
      title: UpdateJobRequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: Random
        position: full-stack developer
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
- name: Misc
  description: ''
- name: Auth
  description: ''
- name: Jobs
  description: ''